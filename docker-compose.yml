services:
  # MySQL Database - Same as development (uses public image)
  mysql:
    image: mysql:8.0
    container_name: ${MYSQL_CONTAINER_NAME:-agentic-mysql}
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_HOST: '%'
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - agentic-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    command: --default-authentication-plugin=mysql_native_password --innodb-buffer-pool-size=${MYSQL_BUFFER_POOL_SIZE:-256M} --bind-address=0.0.0.0

  # .NET Application - Uses pre-built image instead of building
  agentic-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${APP_CONTAINER_NAME:-agentic-backend}
    restart: unless-stopped
    ports:
      - "${APP_HTTP_PORT:-5000}:80"
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT:-Production}
      ASPNETCORE_URLS: http://0.0.0.0:80
      ConnectionStrings__DefaultConnection: Server=mysql;Database=${MYSQL_DATABASE:-agentic_db};User=${MYSQL_USER};Password=${MYSQL_PASSWORD};Port=3306
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - agentic-network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  mysql_data:

networks:
  agentic-network:
    driver: bridge