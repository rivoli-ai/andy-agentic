services:
  # PostgreSQL Database with pgvector extension
  postgres:
    image: pgvector/pgvector:pg16
    container_name: ${POSTGRES_CONTAINER_NAME:-agentic-postgres}
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE:-agentic_db}
      POSTGRES_USER: ${POSTGRES_USER:-agentic_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-agentic_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
    networks:
      - agentic-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-agentic_user} -d ${POSTGRES_DATABASE:-agentic_db}"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 30s

  # .NET Application - Uses pre-built image instead of building
  agentic-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${APP_CONTAINER_NAME:-agentic-backend}
    restart: unless-stopped
    ports:
      - "${APP_HTTP_PORT:-5000}:80"
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT:-Production}
      ASPNETCORE_URLS: http://0.0.0.0:80
      ConnectionStrings__DefaultConnection: Host=postgres;Database=${POSTGRES_DATABASE:-agentic_db};Username=${POSTGRES_USER:-agentic_user};Password=${POSTGRES_PASSWORD:-agentic_password};Port=5432;Include Error Detail=true
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - agentic-network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:

networks:
  agentic-network:
    driver: bridge